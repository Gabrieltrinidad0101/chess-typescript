var d=Object.defineProperty;var x=(a,t,i)=>t in a?d(a,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[t]=i;var e=(a,t,i)=>(x(a,typeof t!="symbol"?t+"":t,i),i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function i(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerpolicy&&(n.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?n.credentials="include":s.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(s){if(s.ep)return;s.ep=!0;const n=i(s);fetch(s.href,n)}})();const r=class{static getPieceByPosition(t){var i;if((i=this.initial)!=null&&i.dataChess&&this.initial.dataChess[t==null?void 0:t.x])return this.initial.dataChess[t.x][t.y]}static getPositionsOfAttack(t,i){this.initial.dataChess;for(const o of this.initial.dataChess)for(const s of o)for(const n of s.attackPosition??[])if(n.x===i.x&&n.y===i.y&&t.team!==s.team)return!0;return!1}};let c=r;e(c,"initial"),e(c,"chess",[[{name:"tower",team:"black"},{name:"pawn",team:"black"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"pawn",team:"white"},{name:"tower",team:"white"}],[{name:"horse",team:"black"},{name:"pawn",team:"black"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"pawn",team:"white"},{name:"horse",team:"white"}],[{name:"bishop",team:"black"},{name:"pawn",team:"black"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"pawn",team:"white"},{name:"bishop",team:"white"}],[{name:"king",team:"black"},{name:"pawn",team:"black"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"pawn",team:"white"},{name:"king",team:"white"}],[{name:"lady",team:"black"},{name:"pawn",team:"black"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"pawn",team:"white"},{name:"lady",team:"white"}],[{name:"bishop",team:"black"},{name:"pawn",team:"black"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"pawn",team:"white"},{name:"bishop",team:"white"}],[{name:"horse",team:"black"},{name:"pawn",team:"black"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"pawn",team:"white"},{name:"horse",team:"white"}],[{name:"tower",team:"black"},{name:"pawn",team:"black"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"",team:"space"},{name:"pawn",team:"white"},{name:"tower",team:"white"}]]),(()=>{const t=new Array;for(let i=0;i<r.chess.length;i++){const o=new Array;for(let s=0;s<r.chess[i].length;s++)o.push({name:r.chess[i][s].name,positionX:i,positionY:s,hadMovie:!1,team:r.chess[i][s].team,attackPosition:[]});t.push(o)}r.initial={dataChess:t,turn:"white"}})();class m{constructor(){e(this,"actionShowPoints")}clearAttackPositions(t){t.attackPosition=[]}getPositionBaseOnPiece(t,i){return{x:t.x+i.positionX,y:t.y+i.positionY}}getCoordinatesTypeOfPiece(t,i){return{x:t.positionX,y:t.positionY,castling:i}}getPieceBaseOnPositionPiece(t,i){const o=this.getPositionBaseOnPiece(t,i);return c.getPieceByPosition(o)}generateAttckPositionsCallBack(t,i,o){t.forEach(s=>{const n=this.getPieceBaseOnPositionPiece(s,i);o(n)})}generateAttckPositions(t,i){this.generateAttckPositionsCallBack(t,i,o=>{this.calculatePointPosition(i,o)})}generateLinesAttackPosition(t,i){i.forEach(o=>{this.getLineOfAttack({...t,x:o.x,y:o.y})})}getLineOfAttack(t){var k;const{coordinatesType:i,pieceInterface:o,x:s,y:n,limit:l,pieceNoAttack:h,pieceAttack:u}=t,P={x:((i==null?void 0:i.x)??o.positionX)+s,y:((i==null?void 0:i.y)??o.positionY)+n},w=c.getPieceByPosition(P);l===1||w==null||h.includes(w.team)||((k=o.attackPosition)==null||k.push(P),w.team!=u&&this.getLineOfAttack({...t,limit:l-1,coordinatesType:P}))}calculatePointPosition(t,i){var o;!i||t.team===i.team||(o=t.attackPosition)==null||o.push({x:i.positionX,y:i.positionY})}}class b{constructor(){e(this,"analysisPositions",new m)}generateAttackPositions(t){const i=[{x:2,y:1},{x:2,y:-1},{x:-2,y:1},{x:-2,y:-1},{x:1,y:2},{x:-1,y:2},{x:1,y:-2},{x:-1,y:-2}];this.analysisPositions.generateAttckPositions(i,t)}}class y{constructor(){e(this,"analysisPositions",new m)}generateAttackPositions(t){const i=[{x:1,y:0},{x:0,y:-1},{x:0,y:1},{x:-1,y:0}];this.analysisPositions.generateLinesAttackPosition({pieceInterface:t,limit:1/0,pieceNoAttack:[t.team],pieceAttack:t.team==="black"?"white":"black"},i)}}class A{constructor(){e(this,"analysisPositions",new m)}generateAttackPositions(t){const i=[{x:1,y:0},{x:1,y:-1},{x:0,y:-1},{x:-1,y:-1},{x:-1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}];if(this.analysisPositions.generateAttckPositions(i,t),t.hadMovie)return;const o=[{x:-1,y:0},{x:-2,y:0,castling:"left"}],s=[{x:1,y:0},{x:2,y:0,castling:"right"}];this.castlingPositions(t,"left",o),this.castlingPositions(t,"rigth",s)}getPositionBaseOnPieceOfRey(t,i){const o={y:t.positionY,x:i==="left"?0:c.initial.dataChess[0].length-1},s=c.getPieceByPosition(o);if(!(!s||s.name!=="tower"||s.hadMovie))return s}castlingPositions(t,i,o){this.getPositionBaseOnPieceOfRey(t,i)&&this.castling(o,t)}castling(t,i){var n;let o=[],s=!1;this.analysisPositions.generateAttckPositionsCallBack(t,i,l=>{if(!l)return;const h=this.analysisPositions.getCoordinatesTypeOfPiece(l,t[1].castling);if(s=c.getPositionsOfAttack(i,h)||(l==null?void 0:l.team)!=="space",s){o=[];return}o.push(h)}),o.shift(),i.attackPosition=(n=i.attackPosition)==null?void 0:n.concat(o)}}class g{constructor(){e(this,"analysisPositions",new m)}generateAttackPositions(t){const i=[{x:1,y:1},{x:-1,y:-1},{x:-1,y:1},{x:1,y:-1}];this.analysisPositions.generateLinesAttackPosition({pieceInterface:t,limit:1/0,pieceNoAttack:[t.team],pieceAttack:t.team==="black"?"white":"black"},i)}}class v{constructor(){e(this,"analysisPositions",new m);e(this,"tower",new y);e(this,"bishop",new g)}generateAttackPositions(t){this.tower.generateAttackPositions(t),this.bishop.generateAttackPositions(t)}}class L{constructor(){e(this,"analysisPositions",new m)}generateAttackPositions(t){const i=t.team==="black"?1:-1,o=t.hadMovie?[{x:0,y:1*i}]:[{x:0,y:2*i},{x:0,y:1*i}],s=[{x:1*i,y:1*i},{x:-1*i,y:1*i}];this.analysisPositions.generateLinesAttackPosition({pieceInterface:t,limit:2,pieceNoAttack:["black","white"]},o),this.analysisPositions.generateAttckPositionsCallBack(s,t,n=>{var l;n===void 0||(n==null?void 0:n.team)==="space"||(n==null?void 0:n.team)===t.team||(l=t.attackPosition)==null||l.push({x:n.positionX,y:n.positionY})})}convertPawnIntoLady(t){const i=t.team=="black"?7:0;t.positionY===i&&(c.initial.dataChess[t.positionX][t.positionY]={...t,name:"lady"})}}class f{constructor(){e(this,"horse",new b);e(this,"tower",new y);e(this,"rey",new A);e(this,"bishop",new g);e(this,"lady",new v);e(this,"pawn",new L);e(this,"analysisPositions",new m);e(this,"actions",new Map([["horse",t=>{this.horse.generateAttackPositions(t)}],["tower",t=>{this.tower.generateAttackPositions(t)}],["king",t=>{this.rey.generateAttackPositions(t)}],["bishop",t=>{this.bishop.generateAttackPositions(t)}],["lady",t=>{this.lady.generateAttackPositions(t)}],["pawn",t=>{this.pawn.generateAttackPositions(t)}]]));e(this,"actionShowPoints")}gerenerateAttackPositionsByPiece(t){const i=this.actions.get(t.name);this.analysisPositions.clearAttackPositions(t),i&&i(t)}moveCastling(t,i){const o=this.rey.getPositionBaseOnPieceOfRey(i,t.castling||"right");if(!o)return;const s=this.analysisPositions.getPositionBaseOnPiece({x:t.castling==="left"?1:-1,y:0},i);this.movePiece(s,o),c.initial.turn=c.initial.turn==="white"?"black":"white"}movePiece(t,i){if(!i)return;const o={...i};o.positionX=t.x,o.positionY=t.y,c.initial.turn=c.initial.turn==="white"?"black":"white",t.castling&&this.moveCastling(t,o);const s=c.initial.dataChess;o.hadMovie=!0;const n={...s[t.x][t.y]};s[t.x][t.y]=o,s[i.positionX][i.positionY]={name:"",positionX:i.positionX,positionY:i.positionY,hadMovie:!1,team:"space",attackPosition:[]},o.name=="pawn"&&this.pawn.convertPawnIntoLady(o),n.name==="king"&&(alert(`lost ${n.team}`),window.location.href="/")}showAttackPosition(t){var i;c.initial.turn===t.team&&(c.initial.pieceFocus=t,(i=t.attackPosition)==null||i.forEach(o=>{this.actionShowPoints!==void 0&&this.actionShowPoints(o)}))}}class O{constructor(){e(this,"pieceLogic");e(this,"analysisPositions",new m);e(this,"piecesIcon",new Map([["king-black","&#x265A;"],["lady-black","&#x265B;"],["tower-black","&#x265C;"],["bishop-black","&#x265D;"],["horse-black","&#x265E;"],["pawn-black","&#x265F;"],["king-white","&#x2654;"],["lady-white","&#x2655;"],["tower-white","&#x2656;"],["bishop-white","&#x2657;"],["horse-white","&#x2658;"],["pawn-white","&#x2659;"]]));this.pieceLogic=new f,this.pieceLogic.actionShowPoints=this.showPointsPosition.bind(this),window.addEventListener("click",t=>this.removeAllPointsPosition())}renderPiece(t){this.pieceLogic.gerenerateAttackPositionsByPiece(t);const i=document.createElement("div");i.className=`team-${t.team} pieceHtml color-${this.backgroundColor(t.positionX,t.positionY)}`,i.innerHTML=this.piecesIcon.get(`${t.name}-${t.team}`)??"",i.addEventListener("click",s=>this.addEvent(s,t));const o=this.createPointsPosition(t);return{divPiece:i,pointPosition:o}}removeAllPointsPosition(){document.querySelectorAll(".pointHtml").forEach(t=>{t.setAttribute("style","visibility: hidden")})}showPointsPosition(t){const i=document.querySelector(`.position-${t.x}-${t.y}`);i==null||i.setAttribute("style","visibility: visible")}createPointsPosition(t){const i=document.createElement("div");return i.className=`pointHtml position-${t.positionX}-${t.positionY}`,i.addEventListener("click",o=>{var s;for(const n of((s=c.initial.pieceFocus)==null?void 0:s.attackPosition)??[])if(!(n.x!==t.positionX||n.y!==t.positionY)){this.pieceLogic.movePiece(n,c.initial.pieceFocus),p();break}}),i}addEvent(t,i){this.removeAllPointsPosition(),t.stopPropagation(),this.pieceLogic.showAttackPosition(i)}backgroundColor(t,i){return(t%2?i%2==0:i%2!=0)?"black":"white"}}const C=(a,t)=>{const i=document.createElement("div");return a.forEach(o=>{const s=document.createElement("div");s.className="containerPieceAndPointPosition";const n=t(o);s.appendChild(n.divPiece),s.appendChild(n.pointPosition),i.appendChild(s)}),i},B=a=>new O().renderPiece(a),p=()=>{const a=document.querySelector(".table");if(!a)return;a.innerHTML="";const t=c.initial.dataChess,i=new DocumentFragment;t.forEach(o=>{const s=C(o,n=>B(n));i.append(s)}),a.appendChild(i)};p();
